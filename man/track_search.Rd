% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tracks_api.R
\name{track_search}
\alias{track_search}
\title{Search for a specific track, the name needs to match exactly. But you can
also search for similar albums but the name needs to match exactly too.}
\usage{
track_search(title = NULL, artist_name = NULL, decade = NULL,
  genre = NULL, isrc = NULL, lyrics_phrase = NULL,
  lyrics_keywords = NULL, lyrics_lang = NULL, limit = NULL,
  offset = NULL, query = NULL, api_key = NULL)
}
\arguments{
\item{title}{*optional title of the track}

\item{artist_name}{*optional Return tracks who match the name; exact, case insensitive     "White+album"}

\item{decade}{*optional a decade for instance}

\item{genre}{*optional a genre such as Blues, Rock etc.\url{https://developer.musicgraph.com/api-docs/v2/dictionary}}

\item{isrc}{*optional Return tracks that match a given isrc; exact, case sensitive, f.i. "GBBKS0700574"}

\item{lyrics_phrase}{*optional Return tracks with lyrics that have an exact match of the given string; case insensitive}

\item{lyrics_keywords}{*optional Return tracks with lyrics that have keywords that are "most representative" (i.e. in the song's "bag of words"); case insensitive}

\item{lyrics_lang}{*optional Return tracks with lyrics of a specified language;}

\item{limit}{*optional max number of results defaults to 20}

\item{offset}{*optional pagination which page of the results do you want}

\item{query}{use this if you know exactly what your query is, leave NULL if you
have want to build up the query in steps}

\item{api_key}{your developer API key see \url{getting_api_key}}
}
\value{
a response object.
}
\description{
Search for a specific track, the name needs to match exactly. But you can
also search for similar albums but the name needs to match exactly too.
}
\seealso{
Other tracks_endpoint: \code{\link{track_edges}},
  \code{\link{track_lookup}}
}
